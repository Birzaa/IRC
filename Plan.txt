Objectif : Cr√©er un serveur ou plusieurs personne (clients) peuvent se connecter pour acceder √† un chat en gros.

Comment : 
1) Faut lancer le serveur, en lancant le projet : ./irc <port> <password>
2) Faut creer un client pour rejoindre le serveur : nc <adresseIP> <port>

Etapes du projet : 

1) Cr√©er le serveur

2) G√©rer l'authentification utilisateurs (clients) (si y'a le bon mdp et tout)

3) G√©rer les diff√©rents channels de discussion

4) J

üìå Technos et outils
Langage : C++98
Biblioth√®ques : sys/socket.h, netinet/in.h, arpa/inet.h, fcntl.h, poll.h
Outils pour tester : Un client IRC comme WeeChat, HexChat, ou nc (netcat)
Commandes utiles pour tester :
nc 127.0.0.1 6667

√âtapes Cl√©s pour Avancer Rapidement
Mise en place de l'infrastructure :

Configurer le Makefile et la structure du projet.

Impl√©menter la gestion des sockets et la boucle principale avec poll().

Authentification et connexion des clients :

Impl√©menter la v√©rification du mot de passe.

G√©rer l'attribution des nicknames et usernames.

Gestion des canaux et des messages :

Impl√©menter la cr√©ation et la suppression des canaux.

G√©rer les messages dans les canaux et les messages priv√©s.

Commandes obligatoires :

Impl√©menter les commandes KICK, INVITE, TOPIC, et MODE.

Tester chaque commande avec un client IRC (comme irssi ou HexChat).

Tests et d√©bogage :

Tester le serveur avec plusieurs clients simultan√©ment.

V√©rifier la stabilit√© et la gestion des erreurs.

Outils et Ressources Utiles
Clients IRC : Utilisez un client comme irssi ou HexChat pour tester votre serveur.

Documentation : Consultez la documentation officielle du protocole IRC (RFC 1459) pour comprendre les commandes et les messages.

Outils de d√©bogage : Utilisez des outils comme valgrind pour d√©tecter les fuites de m√©moire et gdb pour d√©boguer le code.